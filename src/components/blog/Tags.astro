---
interface Props {
  items: string[];
  position?: "left";
  small?: boolean;
}

const { items, position, small } = Astro.props as Props;
---

<ul class={`tags ${position ? position : ""}`} role="list">
  {
    items.map((tag) => (
      <li class={`tag ${small ? "small" : ""}`} data-tag={tag.toLowerCase()}>
        {tag.toUpperCase()}
      </li>
    ))
  }
</ul>

<style lang="scss" scoped>
  @use "../../assets/styles/design-tokens/base-colors";
  .tags {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;

    &.left {
      justify-content: flex-start;
    }

    .tag {
      padding: 0.25rem 1.25rem;
      border-radius: 0.375rem;
      border: 1px solid var(--tag-clr, base-colors.$cyan-7);
      background-color: var(--tag-clr-bg, base-colors.$cyan-1);
      color: var(--tag-clr, base-colors.$cyan-7);
      font-weight: bold;
      letter-spacing: 1px;
      font-size: 0.75rem;
      font-family: monospace;

      &.small {
        padding: 0.125rem 1rem;
      }

      &[data-tag="html"] {
        --tag-clr: #{base-colors.$orange-7};
        --tag-clr-bg: #{base-colors.$orange-1};
      }
      &[data-tag="css"] {
        --tag-clr: #{base-colors.$blue-7};
        --tag-clr-bg: #{base-colors.$blue-1};
      }
      &[data-tag="sass"] {
        --tag-clr: #{base-colors.$purple-7};
        --tag-clr-bg: #{base-colors.$purple-1};
      }
      &[data-tag="javascript"] {
        --tag-clr: #{base-colors.$yellow-7};
        --tag-clr-bg: #{base-colors.$yellow-1};
      }
      &[data-tag="typescript"] {
        --tag-clr: #{base-colors.$indigo-7};
        --tag-clr-bg: #{base-colors.$indigo-1};
      }
      &[data-tag="node"] {
        --tag-clr: #{base-colors.$camo-7};
        --tag-clr-bg: #{base-colors.$camo-1};
      }
      &[data-tag="vue"] {
        --tag-clr: #{base-colors.$lime-7};
        --tag-clr-bg: #{base-colors.$lime-1};
      }
    }
  }
</style>

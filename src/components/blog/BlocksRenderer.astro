---
import type { BlockObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import Heading1 from "./blocks/Heading1.astro";
import Heading2 from "./blocks/Heading2.astro";
import Heading3 from "./blocks/Heading3.astro";
import Paragraph from "./blocks/Paragraph.astro";
import Image from "./blocks/Image.astro";
import Quote from "./blocks/Quote.astro";
import Unsupported from "./blocks/Unsupported.astro";
import Code from "./blocks/Code.astro";
import Table from "./blocks/Table.astro";
import List from "./blocks/List.astro";

interface Props {
  items: BlockObjectResponse[];
  title: string;
  className: string;
}
const { items, title, className } = Astro.props as Props;

const groupedData: any[] = [];
let prevType = "";

items.forEach((item) => {
  if (item.type === "bulleted_list_item") {
    if (prevType !== "bulleted_list_item") {
      groupedData.push({
        type: "custom_list",
        list_items: [item],
      });
    } else {
      groupedData[groupedData.length - 1].list_items.push(item);
    }
  } else {
    groupedData.push(item);
  }

  prevType = item.type;
});
---

<div class={className}>
  {
    groupedData.map((block) => {
      switch (block.type) {
        case "heading_1":
          return <Heading1 block={block} />;
        case "heading_2":
          return <Heading2 block={block} />;
        case "heading_3":
          return <Heading3 block={block} />;
        case "paragraph":
          return <Paragraph block={block} />;
        case "image":
          return <Image block={block} title={title} />;
        case "quote":
          return <Quote block={block} />;
        case "code":
          return <Code block={block} />;
        case "table":
          return <Table block={block} />;
        case "custom_list":
          return <List block={block} />;
        default:
          return <Unsupported block={block} />;
      }
    })
  }
</div>

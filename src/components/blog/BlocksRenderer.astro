---
import type { BlockObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import Heading1 from "./blocks/Heading1.astro";
import Heading2 from "./blocks/Heading2.astro";
import Heading3 from "./blocks/Heading3.astro";
import Paragraph from "./blocks/Paragraph.astro";
import Image from "./blocks/Image.astro";
import Quote from "./blocks/Quote.astro";
import Unsupported from "./blocks/Unsupported.astro";
import Code from "./blocks/Code.astro";
import Table from "./blocks/Table.astro";
import List from "./blocks/List.astro";

interface Props {
  items: BlockObjectResponse[];
  title?: string;
  className?: string;
}
const { items, title = "", className } = Astro.props as Props;

const groupedData: any[] = [];
let prevType = "";

items.forEach((item) => {
  if (item.type === "bulleted_list_item") {
    if (prevType !== "bulleted_list_item") {
      groupedData.push({
        type: "custom_list",
        list_items: [item],
      });
    } else {
      groupedData[groupedData.length - 1].list_items.push(item);
    }
  } else {
    groupedData.push(item);
  }

  prevType = item.type;
});
---

<div class={`blockRenderer ${className}`}>
  {
    groupedData.map((block) => {
      switch (block.type) {
        case "heading_1":
          return <Heading1 block={block} />;
        case "heading_2":
          return <Heading2 block={block} />;
        case "heading_3":
          return <Heading3 block={block} />;
        case "paragraph":
          return <Paragraph block={block} />;
        case "image":
          return <Image block={block} title={title} />;
        case "quote":
          return <Quote block={block} />;
        case "code":
          return <Code block={block} />;
        case "table":
          return <Table block={block} />;
        case "custom_list":
          return <List block={block} />;
        default:
          return <Unsupported block={block} />;
      }
    })
  }
</div>

<style lang="scss">
  .blockRenderer {
    color: var(--clr-blogpost-text);
    font-size: 1.25rem;

    .astro-code {
      padding: 1rem 1.25rem;
      font-size: 1rem;
    }

    hr {
      color: var(--clr-blogpost-accent);
      margin-block: 3rem;
    }

    h1 {
      text-align: center;
    }

    h2,
    h3,
    h4,
    h5,
    h6 {
      margin: revert;
    }

    .sub-title {
      color: var(--clr-blogpost-text);
      text-align: center;
      font-style: italic;
      font-size: 1rem;
    }
    p {
      letter-spacing: 1px;
      line-height: 1.5;
    }
    // Lists
    ul,
    ol {
      display: block;
      margin-top: 1em;
      margin-bottom: 1em;
      margin-left: 0;
      margin-right: 0;
      padding-left: 40px;
    }
    ol {
      list-style: decimal;
    }
    ul {
      list-style: disc;
    }

    // Blockquote
    blockquote {
      background-color: transparent;
      border-left: 10px solid var(--clr-blogpost-accent);
      margin: 1.5em 10px;
      padding: 0.5em 10px;
      quotes: "\201C""\201D""\2018""\2019";
    }
    blockquote:before {
      color: var(--clr-blogpost-accent);
      content: open-quote;
      font-size: 4em;
      line-height: 0.1em;
      margin-right: 0.25em;
      vertical-align: -0.4em;
    }
    blockquote p {
      display: inline;
    }

    // Tables
    table {
      width: 100%;
      background-color: var(--clr-blogpost-table-bg);
      border-collapse: collapse;
      border-width: 2px;
      border-color: #ffcc00;
      border-style: solid;
      color: #000000;
    }

    table td,
    table th {
      border-width: 2px;
      border-color: var(--clr-blogpost-table);
      border-style: solid;
      padding: 0.25rem 0.75rem;
    }

    table thead {
      background-color: var(--clr-blogpost-table);
    }

    img {
      display: block;
      margin-left: auto;
      margin-right: auto;
    }
  }
</style>
